{"version":3,"sources":["webpack://_N_E/./components/PostForm.js","webpack://_N_E/./pages/index.js","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js"],"names":["PostForm","useSelector","state","post","imagePaths","addPostDone","dispatch","useDispatch","useInput","text","onChangeText","setText","useEffect","onSubmit","useCallback","trim","alert","formData","FormData","forEach","p","append","type","ADD_POST_REQUEST","data","imageInput","useRef","onClickImageUpload","current","click","onChangeImages","e","console","log","target","files","imageFormData","call","f","UPLOAD_IMAGES_REQUEST","onRemoveImage","index","REMOVE_IMAGE","style","margin","encType","onFinish","TextArea","value","onChange","maxLength","placeholder","name","multiple","hidden","ref","onClick","float","htmlType","map","v","i","key","display","src","width","alt","Home","me","user","mainPosts","hasMorePosts","loadPostsLoading","retweetError","onScroll","window","pageYOffset","document","documentElement","clientHeight","scrollHeight","lastId","length","id","LOAD_POSTS_REQUEST","addEventListener","removeEventListener","AppLayout","PostCard","__NEXT_P","push"],"mappings":"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","file":"static/chunks/pages/index-8f28719059615809d1a0.js","sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport React, { useEffect, useCallback, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { backUrl } from \"../config/config\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport {\r\n  addPost,\r\n  ADD_POST_REQUEST,\r\n  REMOVE_IMAGE,\r\n  UPLOAD_IMAGES_REQUEST,\r\n} from \"../reducers/post\";\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText(\"\");\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    if (!text || !text.trim()) {\r\n      return alert(\"게시글을 작성하세요.\");\r\n    }\r\n    const formData = new FormData();\r\n    imagePaths.forEach((p) => {\r\n      formData.append(\"image\", p);\r\n    });\r\n    formData.append(\"content\", text);\r\n    dispatch({\r\n      type: ADD_POST_REQUEST,\r\n      data: formData,\r\n    });\r\n  }, [text, imagePaths]);\r\n\r\n  const imageInput = useRef();\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  const onChangeImages = useCallback((e) => {\r\n    console.log(\"images\", e.target.files);\r\n    const imageFormData = new FormData();\r\n    [].forEach.call(e.target.files, (f) => {\r\n      imageFormData.append(\"image\", f);\r\n    });\r\n    dispatch({\r\n      type: UPLOAD_IMAGES_REQUEST,\r\n      data: imageFormData,\r\n    });\r\n  });\r\n\r\n  const onRemoveImage = useCallback((index) => () => {\r\n    dispatch({\r\n      type: REMOVE_IMAGE,\r\n      data: index,\r\n    });\r\n  });\r\n\r\n  return (\r\n    <Form\r\n      style={{ margin: \"10px 0 20px\" }}\r\n      encType=\"multipart/form-data\"\r\n      onFinish={onSubmit}\r\n    >\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"무슨일\"\r\n      />\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          multiple\r\n          hidden\r\n          ref={imageInput}\r\n          onChange={onChangeImages}\r\n        />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\r\n          게시글 작성\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v, i) => (\r\n          <div key={v} style={{ display: \"inline-block\" }}>\r\n            <img src={v} style={{ width: \"200px\" }} alt={v} />\r\n            <div>\r\n              <Button onClick={onRemoveImage(i)}>제거</Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\r\nimport wrapper from \"../store/configureStore\";\r\nimport { END } from \"redux-saga\";\r\nimport axios from \"axios\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state) => state.user);\r\n  const { mainPosts, hasMorePosts, loadPostsLoading, retweetError } =\r\n    useSelector((state) => state.post);\r\n  console.log(mainPosts);\r\n  useEffect(() => {\r\n    if (retweetError) {\r\n      alert(retweetError);\r\n    }\r\n  }, [retweetError]);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      // console.log(\r\n      //   window.scrollY,\r\n      //   document.documentElement.clientHeight,\r\n      //   document.documentElement.scrollHeight\r\n      // );\r\n      if (\r\n        window.pageYOffset + document.documentElement.clientHeight >\r\n        document.documentElement.scrollHeight - 300\r\n      ) {\r\n        if (hasMorePosts && !loadPostsLoading) {\r\n          const lastId = mainPosts[mainPosts.length - 1]?.id;\r\n          dispatch({\r\n            type: LOAD_POSTS_REQUEST,\r\n            lastId,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener(\"scroll\", onScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", onScroll);\r\n    };\r\n  }, [hasMorePosts, loadPostsLoading, mainPosts]);\r\n\r\n  return (\r\n    <AppLayout>\r\n      {me && <PostForm />}\r\n      {mainPosts.map((post) => (\r\n        <PostCard key={post.id} post={post} />\r\n      ))}\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(\r\n  (store) =>\r\n    async ({ req }) => {\r\n      const cookie = req ? req.headers.cookie : \"\";\r\n      axios.defaults.headers.Cookie = \"\";\r\n      if (req && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n      }\r\n      store.dispatch({\r\n        type: LOAD_MY_INFO_REQUEST,\r\n      });\r\n      store.dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n      });\r\n      store.dispatch(END);\r\n      await store.sagaTask.toPromise();\r\n    }\r\n);\r\n\r\nexport default Home;\r\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.js\");\n      }\n    ]);\n  "],"sourceRoot":""}