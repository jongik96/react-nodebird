{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport reducer from \"../reducers\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, loggerMiddleware];\n  const enhancer = false ? compose(applyMiddleware(...middlewares)) : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.dispatch({\n    type: \"CHANGE_NICKNAME\",\n    data: \"durant\"\n  });\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","reducer","createSagaMiddleware","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","type","data","wrapper","debug"],"sources":["C:/react-study/next-inflearn/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reducer from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nconst loggerMiddleware =\r\n  ({ dispatch, getState }) =>\r\n  (next) =>\r\n  (action) => {\r\n    console.log(action);\r\n    return next(action);\r\n  };\r\n\r\nconst configureStore = () => {\r\n  const sagaMiddleware = createSagaMiddleware();\r\n  const middlewares = [sagaMiddleware, loggerMiddleware];\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : composeWithDevTools(applyMiddleware(...middlewares));\r\n  const store = createStore(reducer, enhancer);\r\n  store.dispatch({\r\n    type: \"CHANGE_NICKNAME\",\r\n    data: \"durant\",\r\n  });\r\n  return store;\r\n};\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\nexport default wrapper;\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;;AAEA,MAAMC,gBAAgB,GACpB,CAAC;EAAEC,QAAF;EAAYC;AAAZ,CAAD,KACCC,IAAD,IACCC,MAAD,IAAY;EACVC,OAAO,CAACC,GAAR,CAAYF,MAAZ;EACA,OAAOD,IAAI,CAACC,MAAD,CAAX;AACD,CANH;;AAQA,MAAMG,cAAc,GAAG,MAAM;EAC3B,MAAMC,cAAc,GAAGT,oBAAoB,EAA3C;EACA,MAAMU,WAAW,GAAG,CAACD,cAAD,EAAiBR,gBAAjB,CAApB;EACA,MAAMU,QAAQ,GACZ,QACIf,OAAO,CAACD,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CADX,GAEIZ,mBAAmB,CAACH,eAAe,CAAC,GAAGe,WAAJ,CAAhB,CAHzB;EAIA,MAAME,KAAK,GAAGf,WAAW,CAACE,OAAD,EAAUY,QAAV,CAAzB;EACAC,KAAK,CAACV,QAAN,CAAe;IACbW,IAAI,EAAE,iBADO;IAEbC,IAAI,EAAE;EAFO,CAAf;EAIA,OAAOF,KAAP;AACD,CAbD;;AAcA,MAAMG,OAAO,GAAGrB,aAAa,CAACc,cAAD,EAAiB;EAC5CQ,KAAK;AADuC,CAAjB,CAA7B;AAGA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}