{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(addPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchAddPost),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(postSaga);\n\nimport axios from \"axios\";\nimport { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\n\nfunction addPostAPI(data) {\n  return axios.post(\"/api/post\", data);\n}\n\nfunction addPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function addPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(addPostAPI, action.data);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: \"ADD_POST_REQUEST\"\n          });\n\n        case 6:\n          _context.next = 8;\n          return put({\n            type: \"ADD_POST_SUCCESS\",\n            data: result.data\n          });\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put({\n            type: \"ADD_POST_FAILURE\",\n            data: _context.t0.response.data\n          });\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10]]);\n}\n\nfunction watchAddPost() {\n  return _regeneratorRuntime.wrap(function watchAddPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(\"ADD_POST_REQUEST\", addPost);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function postSaga() {\n  return _regeneratorRuntime.wrap(function postSaga$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([fork(watchAddPost)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"names":["addPost","watchAddPost","postSaga","axios","all","call","fork","put","takeLatest","addPostAPI","data","post","action","result","type","response"],"sources":["C:/react-study/next-inflearn/front/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { all, call, fork, put, takeLatest } from \"redux-saga/effects\";\r\nfunction addPostAPI(data) {\r\n  return axios.post(\"/api/post\", data);\r\n}\r\n\r\nfunction* addPost(action) {\r\n  try {\r\n    const result = yield call(addPostAPI, action.data);\r\n    yield put({\r\n      type: \"ADD_POST_REQUEST\",\r\n    });\r\n    yield put({\r\n      type: \"ADD_POST_SUCCESS\",\r\n      data: result.data,\r\n    });\r\n  } catch (err) {\r\n    yield put({\r\n      type: \"ADD_POST_FAILURE\",\r\n      data: err.response.data,\r\n    });\r\n  }\r\n}\r\n\r\nfunction* watchAddPost() {\r\n  yield takeLatest(\"ADD_POST_REQUEST\", addPost);\r\n}\r\nexport default function* postSaga() {\r\n  yield all([fork(watchAddPost)]);\r\n}\r\n"],"mappings":";;oDAMUA,O;qDAkBAC,Y;qDAGeC,Q;;AA3BzB,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,UAA/B,QAAiD,oBAAjD;;AACA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;EACxB,OAAOP,KAAK,CAACQ,IAAN,CAAW,WAAX,EAAwBD,IAAxB,CAAP;AACD;;AAED,SAAUV,OAAV,CAAkBY,MAAlB;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAEmB,OAAMP,IAAI,CAACI,UAAD,EAAaG,MAAM,CAACF,IAApB,CAAV;;QAFnB;UAEUG,MAFV;UAAA;UAGI,OAAMN,GAAG,CAAC;YACRO,IAAI,EAAE;UADE,CAAD,CAAT;;QAHJ;UAAA;UAMI,OAAMP,GAAG,CAAC;YACRO,IAAI,EAAE,kBADE;YAERJ,IAAI,EAAEG,MAAM,CAACH;UAFL,CAAD,CAAT;;QANJ;UAAA;UAAA;;QAAA;UAAA;UAAA;UAAA;UAWI,OAAMH,GAAG,CAAC;YACRO,IAAI,EAAE,kBADE;YAERJ,IAAI,EAAE,YAAIK,QAAJ,CAAaL;UAFX,CAAD,CAAT;;QAXJ;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAkBA,SAAUT,YAAV;EAAA;IAAA;MAAA;QAAA;UAAA;UACE,OAAMO,UAAU,CAAC,kBAAD,EAAqBR,OAArB,CAAhB;;QADF;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;;AAGA,eAAe,SAAUE,QAAV;EAAA;IAAA;MAAA;QAAA;UAAA;UACb,OAAME,GAAG,CAAC,CAACE,IAAI,CAACL,YAAD,CAAL,CAAD,CAAT;;QADa;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}