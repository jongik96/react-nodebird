{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\react-study\\\\next-inflearn\\\\front\\\\components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from \"antd\";\nimport React, { useEffect, useCallback, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { addPost } from \"../reducers/post\";\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var dispatch = useDispatch();\n\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  useEffect(function () {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  var onSubmit = useCallback(function () {\n    dispatch(addPost(text));\n  }, [text]);\n  var imageInput = useRef();\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uBB34\\uC2A8\\uC77C\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": \"right\"\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: \"inline-block\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: \"200px\"\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }));\n  })));\n};\n\n_s(PostForm, \"mabeQCEY36ljg3tfaRmSjfBp9iQ=\", false, function () {\n  return [useSelector, useDispatch, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["Button","Form","Input","React","useEffect","useCallback","useRef","useDispatch","useSelector","useInput","addPost","PostForm","state","post","imagePaths","addPostDone","dispatch","text","onChangeText","setText","onSubmit","imageInput","onClickImageUpload","current","click","margin","map","v","display","width"],"sources":["C:/react-study/next-inflearn/front/components/PostForm.js"],"sourcesContent":["import { Button, Form, Input } from \"antd\";\r\nimport React, { useEffect, useCallback, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { addPost } from \"../reducers/post\";\r\n\r\nconst PostForm = () => {\r\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n  const dispatch = useDispatch();\r\n\r\n  const [text, onChangeText, setText] = useInput(\"\");\r\n\r\n  useEffect(() => {\r\n    if (addPostDone) {\r\n      setText(\"\");\r\n    }\r\n  }, [addPostDone]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(addPost(text));\r\n  }, [text]);\r\n\r\n  const imageInput = useRef();\r\n  const onClickImageUpload = useCallback(() => {\r\n    imageInput.current.click();\r\n  }, [imageInput.current]);\r\n\r\n  return (\r\n    <Form\r\n      style={{ margin: \"10px 0 20px\" }}\r\n      encType=\"multipart/form-data\"\r\n      onFinish={onSubmit}\r\n    >\r\n      <Input.TextArea\r\n        value={text}\r\n        onChange={onChangeText}\r\n        maxLength={140}\r\n        placeholder=\"무슨일\"\r\n      />\r\n      <div>\r\n        <input type=\"file\" multiple hidden ref={imageInput} />\r\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\r\n          게시글 작성\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        {imagePaths.map((v) => (\r\n          <div key={v} style={{ display: \"inline-block\" }}>\r\n            <img src={v} style={{ width: \"200px\" }} alt={v} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}