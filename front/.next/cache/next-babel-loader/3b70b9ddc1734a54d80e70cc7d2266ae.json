{"ast":null,"code":"import shortId from \"shortid\";\nimport produce from \"immer\";\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: \"박종익\"\n    },\n    content: \"첫 번째 게시글 #해시태그\",\n    Images: [{\n      id: shortId.generate(),\n      src: \"https://picsum.photos/id/237/200/300\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://picsum.photos/id/237/200/300\"\n    }, {\n      id: shortId.generate(),\n      src: \"https://picsum.photos/id/237/200/300\"\n    }],\n    Comments: [{\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"durant\"\n      },\n      content: \"첫 번째 댓글\"\n    }, {\n      id: shortId.generate(),\n      User: {\n        id: shortId.generate(),\n        nickname: \"lebron\"\n      },\n      content: \"두 번째 댓글\"\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: \"박종익\"\n  },\n  Images: [],\n  Comments: []\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: \"박종익\"\n  }\n});\n\nconst reducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      draft.addPostLoading = true;\n      draft.addPostDone = false;\n      draft.addPostError = null;\n      break;\n\n    case ADD_POST_SUCCESS:\n      draft.addPostLoading = false;\n      draft.addPostDone = true;\n      draft.mainPosts.unshift(dummyPost(action.data));\n      break;\n\n    case ADD_POST_FAILURE:\n      draft.addPostLoading = true;\n      draft.addPostError = action.error;\n      break;\n\n    case REMOVE_POST_REQUEST:\n      draft.removePostLoading = true;\n      draft.removePostDone = false;\n      draft.removePostError = null;\n      break;\n\n    case REMOVE_POST_SUCCESS:\n      draft.removePostLoading = false;\n      draft.removePostDone = true;\n      draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n\n    case REMOVE_POST_FAILURE:\n      draft.removePostLoading = false;\n      draft.removePostError = action.error;\n      break;\n\n    case ADD_COMMENT_REQUEST:\n      draft.addCommentLoading = true;\n      draft.addCommentDone = false;\n      draft.addCommentError - null;\n      break;\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const post = draft.mainPosts.find(v => v.id === action.data.postId);\n        post.Comments.unshift(dummyComment(action.data.content));\n        draft.addCommentLoading = false;\n        draft.addCommentDone = true;\n        break; // const postIndex = state.mainPosts.findIndex(\n        //   (v) => v.id === action.data.postId\n        // );\n        // const post = { ...state.mainPosts[postIndex] };\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        // const mainPosts = [...state.mainPosts];\n        // mainPosts[postIndex] = post;\n        // return {\n        //   ...state,\n        //   mainPosts,\n        //   addCommentLoading: false,\n        //   addCommentDone: true,\n        // };\n      }\n\n    case ADD_COMMENT_FAILURE:\n      draft.addCommentLoading = false;\n      draft.addCommentError = action.error;\n      break;\n\n    default:\n      break;\n  }\n});\n\nexport default reducer;","map":{"version":3,"names":["shortId","produce","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","unshift","error","filter","v","post","find","postId"],"sources":["C:/react-study/next-inflearn/front/reducers/post.js"],"sourcesContent":["import shortId from \"shortid\";\r\nimport produce from \"immer\";\r\nexport const initialState = {\r\n  mainPosts: [\r\n    {\r\n      id: 1,\r\n      User: {\r\n        id: 1,\r\n        nickname: \"박종익\",\r\n      },\r\n      content: \"첫 번째 게시글 #해시태그\",\r\n      Images: [\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://picsum.photos/id/237/200/300\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://picsum.photos/id/237/200/300\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          src: \"https://picsum.photos/id/237/200/300\",\r\n        },\r\n      ],\r\n      Comments: [\r\n        {\r\n          id: shortId.generate(),\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: \"durant\",\r\n          },\r\n          content: \"첫 번째 댓글\",\r\n        },\r\n        {\r\n          id: shortId.generate(),\r\n          User: {\r\n            id: shortId.generate(),\r\n            nickname: \"lebron\",\r\n          },\r\n          content: \"두 번째 댓글\",\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n  imagePaths: [],\r\n  addPostLoading: false,\r\n  addPostDone: false,\r\n  addPostError: null,\r\n  removePostLoading: false,\r\n  removePostDone: false,\r\n  removePostError: null,\r\n  addCommentLoading: false,\r\n  addCommentDone: false,\r\n  addCommentError: null,\r\n};\r\n\r\nexport const ADD_POST_REQUEST = \"ADD_POST_REQUEST\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAILURE = \"ADD_POST_FAILURE\";\r\n\r\nexport const REMOVE_POST_REQUEST = \"REMOVE_POST_REQUEST\";\r\nexport const REMOVE_POST_SUCCESS = \"REMOVE_POST_SUCCESS\";\r\nexport const REMOVE_POST_FAILURE = \"REMOVE_POST_FAILURE\";\r\n\r\nexport const ADD_COMMENT_REQUEST = \"ADD_COMMENT_REQUEST\";\r\nexport const ADD_COMMENT_SUCCESS = \"ADD_COMMENT_SUCCESS\";\r\nexport const ADD_COMMENT_FAILURE = \"ADD_COMMENT_FAILURE\";\r\n\r\nexport const addPost = (data) => ({\r\n  type: ADD_POST_REQUEST,\r\n  data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n  type: ADD_COMMENT_REQUEST,\r\n  data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n  id: data.id,\r\n  content: data.content,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"박종익\",\r\n  },\r\n  Images: [],\r\n  Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n  id: shortId.generate(),\r\n  content: data,\r\n  User: {\r\n    id: 1,\r\n    nickname: \"박종익\",\r\n  },\r\n});\r\n\r\nconst reducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case ADD_POST_REQUEST:\r\n        draft.addPostLoading = true;\r\n        draft.addPostDone = false;\r\n        draft.addPostError = null;\r\n        break;\r\n      case ADD_POST_SUCCESS:\r\n        draft.addPostLoading = false;\r\n        draft.addPostDone = true;\r\n        draft.mainPosts.unshift(dummyPost(action.data));\r\n        break;\r\n      case ADD_POST_FAILURE:\r\n        draft.addPostLoading = true;\r\n        draft.addPostError = action.error;\r\n        break;\r\n      case REMOVE_POST_REQUEST:\r\n        draft.removePostLoading = true;\r\n        draft.removePostDone = false;\r\n        draft.removePostError = null;\r\n        break;\r\n      case REMOVE_POST_SUCCESS:\r\n        draft.removePostLoading = false;\r\n        draft.removePostDone = true;\r\n        draft.mainPosts = draft.mainPosts.filter((v) => v.id !== action.data);\r\n      case REMOVE_POST_FAILURE:\r\n        draft.removePostLoading = false;\r\n        draft.removePostError = action.error;\r\n        break;\r\n\r\n      case ADD_COMMENT_REQUEST:\r\n        draft.addCommentLoading = true;\r\n        draft.addCommentDone = false;\r\n        draft.addCommentError - null;\r\n        break;\r\n      case ADD_COMMENT_SUCCESS: {\r\n        const post = draft.mainPosts.find((v) => v.id === action.data.postId);\r\n        post.Comments.unshift(dummyComment(action.data.content));\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentDone = true;\r\n\r\n        break;\r\n        // const postIndex = state.mainPosts.findIndex(\r\n        //   (v) => v.id === action.data.postId\r\n        // );\r\n        // const post = { ...state.mainPosts[postIndex] };\r\n        // post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n        // const mainPosts = [...state.mainPosts];\r\n        // mainPosts[postIndex] = post;\r\n        // return {\r\n        //   ...state,\r\n        //   mainPosts,\r\n        //   addCommentLoading: false,\r\n        //   addCommentDone: true,\r\n        // };\r\n      }\r\n      case ADD_COMMENT_FAILURE:\r\n        draft.addCommentLoading = false;\r\n        draft.addCommentError = action.error;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  });\r\n\r\nexport default reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}